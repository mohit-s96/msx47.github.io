{"version":3,"sources":["assets/svg/github.svg","assets/svg/foreign.svg","assets/svg/twitter.svg","assets/svg/linkedin.svg","assets/svg/hamburger.svg","Components/LoadingSvg.jsx","Components/Navbar.jsx","Components/TransitionHOC.jsx","Components/Hero.jsx","Components/About.jsx","Components/Projects.jsx","Components/ProjectModal.jsx","Components/ContactFooter.jsx","Components/Main.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","LoadingSvg","className","id","version","xmlns","xmlnsXlink","x","y","viewBox","style","enableBackground","xmlSpace","fill","points","removeNavbar","e","relatedTarget","tagName","document","getElementById","classList","remove","Navbar","tabIndex","onBlur","href","target","rel","src","git","alt","width","twit","linkedin","TransitionHOC","props","useState","text","setText","useEffect","arr","split","map","char","class","count","setTimeout","setInterval","iref","current","children","textContent","length","clearInterval","render","ref","ui","key","Math","floor","random","Hero","classRef","useRef","ref2","hero","desc","About","ref1","about","headline","para1","para2","techlist","techitem","workedWith","company","name","location","Projects","proj","projects","project","i","languages","language","foreign","liveLink","gitIcon","github","process","thumb","height","projectsMini","miniproj","Component","ProjectModal","autoPlay","ContactFooter","Main","testScroll","showNavbar","add","focus","closeOverlay","display","window","addEventListener","innerWidth","hmb","onClick","this","App","Boolean","hostname","match","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.348397fc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.97fce7eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/foreign.3cf5d20a.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.6089aacb.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.d570ae79.svg\";","module.exports = __webpack_public_path__ + \"static/media/hamburger.f4d8c83c.svg\";","import React from 'react'\r\n\r\nconst LoadingSvg = () => {\r\n    return (\r\n           <div className=\"icon\" id=\"icon\">\r\n                <div className=\"svg-container\">\r\n                    <svg\r\n                    version=\"1.1\" \r\n                    id=\"Capa_1\" \r\n                    xmlns=\"http://www.w3.org/2000/svg\" \r\n                    xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n                    viewBox=\"0 0 512 512\" \r\n                    style={{enableBackground:\"new 0 0 512 512\"}} \r\n                    xmlSpace=\"preserve\">\r\n                        <polygon \r\n                        style={{fill:\"\"}} \r\n                        points=\"512,43.935 512,468.065 360.62,468.065 360.62,266.815 256.14,371.285 256.12,371.265 \r\n                        256,371.385 245.37,360.805 151.38,266.815 151.38,468.065 0,468.065 0,43.935 142.6,43.935 256,157.335 369.4,43.935 \"/>\r\n                        <polygon \r\n                        style={{fill:\"\"}} \r\n                        points=\"512,43.935 512,468.065 360.62,468.065 360.62,266.815 256.14,371.285 256.12,371.265 \r\n                        256,371.385 256,157.335 369.4,43.935 \"/>\r\n                    </svg>\r\n                </div>\r\n           </div>\r\n    )\r\n}\r\n\r\nexport default LoadingSvg\r\n","import React from \"react\";\r\nimport twit from \"../assets/svg/twitter.svg\";\r\nimport git from \"../assets/svg/github.svg\";\r\nimport linkedin from \"../assets/svg/linkedin.svg\";\r\nimport \"./Component Styles/Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div\r\n      className=\"navbar-wrapper\"\r\n      id=\"navbar-wrapper\"\r\n      tabIndex={0}\r\n      onBlur={removeNavbar}\r\n    >\r\n      <nav className=\"flex-left\">\r\n        <div className=\"nav-div\">\r\n          <a\r\n            href=\"https://github.com/msx47\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <img src={git} alt=\"Mohit Srivastava : Github profile\" width=\"30\" />\r\n          </a>\r\n        </div>\r\n        <div className=\"nav-div\">\r\n          <a\r\n            href=\"https://twitter.com/_msx47\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <img\r\n              src={twit}\r\n              alt=\"Mohit Srivastava : Twitter profile\"\r\n              width=\"30\"\r\n            />\r\n          </a>\r\n        </div>\r\n        <div className=\"nav-div\">\r\n          <a\r\n            href=\"https://www.linkedin.com/in/mohit-srivastava-879653200\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <img\r\n              src={linkedin}\r\n              alt=\"Mohit Srivastava : LinkedIn profile\"\r\n              width=\"30\"\r\n            />\r\n          </a>\r\n        </div>\r\n      </nav>\r\n      <nav className=\"inner-nav-flex\">\r\n        <span className=\"nav-item\">\r\n          <a href=\"#hero-main-grid\">Home</a>\r\n        </span>\r\n        <span className=\"nav-item\">\r\n          <a href=\"#about-wrapper\">About</a>\r\n        </span>\r\n        <span className=\"nav-item\">\r\n          <a href=\"#projects-wrapper\">Projects</a>\r\n        </span>\r\n        <span className=\"nav-item\">\r\n          <a href=\"#contact\">Contact</a>\r\n        </span>\r\n        <span className=\"nav-item active\">\r\n          <a\r\n            href=\"https://firebasestorage.googleapis.com/v0/b/fir-auth-4f7e7.appspot.com/o/mohit_2021.pdf?alt=media&token=62c7257c-5d58-4bfd-b428-c68589bdb308\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Resume\r\n          </a>\r\n        </span>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\nconst removeNavbar = (e) => {\r\n  if (!e.relatedTarget || e.relatedTarget.tagName !== \"A\") {\r\n    document.getElementById(\"navbar-wrapper\").classList.remove(\"navbar-block\");\r\n  }\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nfunction TransitionHOC(props) {\r\n  const [text, setText] = useState([]);\r\n  useEffect(() => {\r\n    let arr = props.text\r\n      .split(\"\")\r\n      .map((x) =>\r\n        x === \" \"\r\n          ? { char: x, class: \"bend pad-space\" }\r\n          : { char: x, class: \"bend\" }\r\n      );\r\n    setText(arr);\r\n    let count = 0;\r\n    setTimeout(() => {\r\n      const id = setInterval(() => {\r\n        const x = props.iref.current.children;\r\n        // console.log(x);\r\n        x[count].className =\r\n          x[count].textContent === \" \" ? \"fade pad-space\" : \"fade\";\r\n        count++;\r\n        count === arr.length && clearInterval(id);\r\n      }, 100);\r\n    }, 4000);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  return props.render({\r\n    text: text,\r\n    ref: props.iref,\r\n    ui: () =>\r\n      text.length\r\n        ? text.map((x) => (\r\n            <span key={Math.floor(Math.random() * 10000)} className={x.class}>\r\n              {x.char}\r\n            </span>\r\n          ))\r\n        : null,\r\n  });\r\n}\r\n\r\nexport default TransitionHOC;\r\n","import React, { useRef } from \"react\";\r\nimport hero from \"../info/info.json\";\r\nimport TransitionHOC from \"./TransitionHOC\";\r\nimport \"./Component Styles/Hero.css\";\r\n\r\nconst Hero = () => {\r\n  // const [text, setText] = useState([]);\r\n  const classRef = useRef();\r\n  const ref2 = useRef();\r\n  // useEffect(() => {\r\n  //   let arr = String(\"Mohit Srivastava.\")\r\n  //     .split(\"\")\r\n  //     .map((x) =>\r\n  //       x === \" \"\r\n  //         ? { char: x, class: \"bend pad-space\" }\r\n  //         : { char: x, class: \"bend\" }\r\n  //     );\r\n  //   setText(arr);\r\n  //   let count = 0;\r\n  //   setTimeout(() => {\r\n  //     const id = setInterval(() => {\r\n  //       const x = classRef.current.children;\r\n  //       x[count].className =\r\n  //         x[count].textContent === \" \" ? \"fade pad-space\" : \"fade\";\r\n  //       count++;\r\n  //       count === arr.length && clearInterval(id);\r\n  //     }, 100);\r\n  //   }, 4000);\r\n  // }, []);\r\n  return (\r\n    <div className=\"hero-main-grid\" id=\"hero-main-grid\">\r\n      <div className=\"intro-wrapper\">\r\n        <TransitionHOC\r\n          text={\"Hi, My name is\"}\r\n          iref={ref2}\r\n          render={(props) => (\r\n            <div className=\"hi-message anim-perspective\" ref={props.ref}>\r\n              {props.ui()}\r\n            </div>\r\n          )}\r\n        />\r\n        <TransitionHOC\r\n          text={\"Mohit Srivastava\"}\r\n          iref={classRef}\r\n          render={(props) => {\r\n            return (\r\n              <h3 className=\"name anim-perspective\" ref={props.ref}>\r\n                {props.ui()}\r\n              </h3>\r\n            );\r\n          }}\r\n        />\r\n        <p className=\"small-about\">{hero.hero.desc}</p>\r\n        <a href=\"mailto:mohitsrivastava67@gmail.com\">\r\n          <button className=\"contact-btn\">Get in touch</button>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import React, { useRef } from \"react\";\r\nimport about from \"../info/info.json\";\r\nimport TransitionHOC from \"./TransitionHOC\";\r\nimport \"./Component Styles/About.css\";\r\n\r\nconst About = () => {\r\n  const ref1 = useRef();\r\n  return (\r\n    <div className=\"about-wrapper\" id=\"about-wrapper\">\r\n      <TransitionHOC\r\n        text={\"About Me\"}\r\n        iref={ref1}\r\n        render={(props) => (\r\n          <h3\r\n            className=\"about-me-heading hi-message anim-perspective\"\r\n            ref={props.ref}\r\n          >\r\n            {props.ui()}\r\n          </h3>\r\n        )}\r\n      />\r\n\r\n      <main className=\"main-about-me\">\r\n        <p className=\"small-about\">\r\n          {about.about.headline}\r\n          <br />\r\n          <br />\r\n          {about.about.para1}\r\n          <br />\r\n          <br />\r\n          {about.about.para2[1]}{\" \"}\r\n          <span className=\"university\">{about.about.para2[2]}</span>\r\n          {about.about.para2[3]}\r\n        </p>\r\n        <p className=\"small-about tech-stack\">\r\n          Here are some of the languages/tech I work on frequently\r\n        </p>\r\n        <ul className=\"tech-stacklist\">\r\n          {about.techlist.map((techitem) => (\r\n            <li\r\n              className=\"tech-item\"\r\n              key={Math.floor(Math.random() * 100000000)}\r\n            >\r\n              {techitem}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </main>\r\n      <main className=\"worked-with\">\r\n        <div className=\"heading-container\">\r\n          <h3 className=\"worked-here hi-message\">Worked with</h3>\r\n        </div>\r\n        <div className=\"worked-grid\">\r\n          {about.workedWith.map((company) => (\r\n            <div\r\n              className=\"inner-flex\"\r\n              key={Math.floor(Math.random() * 100000000)}\r\n            >\r\n              <span className=\"company\">\r\n                <span>Company : </span> {company.name}\r\n              </span>\r\n              <span className=\"company\">\r\n                <span>Location : </span> {company.location}\r\n              </span>\r\n              <span className=\"company long\">\r\n                <span>Details : </span>\r\n                {company.desc}\r\n              </span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nimport \"./Component Styles/Projects.css\";\r\nimport proj from \"../info/info.json\";\r\nimport gitIcon from \"../assets/svg/github.svg\";\r\nimport foreign from \"../assets/svg/foreign.svg\";\r\n\r\nclass Projects extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"projects-wrapper\" id=\"projects-wrapper\">\r\n        <div className=\"heading-wrapper left-heading\">\r\n          <h3 className=\"about-me-heading hi-message\">Some of my Projects</h3>\r\n        </div>\r\n        <main className=\"project-container\">\r\n          {proj.projects.map((project, i) => (\r\n            <div\r\n              className=\"project-item\"\r\n              key={Math.floor(Math.random() * 100000000)}\r\n            >\r\n              <div className=\"heading-wrapper right-heading\">\r\n                <h3 className=\"project-name hi-message\">\r\n                  <span>#{i + 1} </span> {project.name}\r\n                </h3>\r\n              </div>\r\n              <div className=\"project-inner-flex\">\r\n                <div className=\"project-desc\">\r\n                  {project.desc}\r\n                  <div className=\"languages\">\r\n                    {project.languages.map((language) => (\r\n                      <span\r\n                        className=\"language\"\r\n                        key={Math.floor(Math.random() * 100000000)}\r\n                      >\r\n                        {language}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"live-version\">\r\n                    <img\r\n                      src={foreign}\r\n                      alt={`${project.name}: on the web`}\r\n                      width=\"15\"\r\n                    />\r\n                    <a href={project.liveLink}>\r\n                      <span className=\"live-text\">Live version here</span>\r\n                    </a>\r\n                  </div>\r\n                  <div className=\"live-version\">\r\n                    <img\r\n                      src={gitIcon}\r\n                      alt={`${project.name}: on Github`}\r\n                      width=\"15\"\r\n                    />\r\n                    <a href={project.github}>\r\n                      <span className=\"live-text\">Also on Github</span>\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                <div className=\"project-thumbnail\">\r\n                  <img\r\n                    src={\r\n                      process.env.PUBLIC_URL + `/assets/img/${project.thumb}`\r\n                    }\r\n                    alt={project.name}\r\n                    width=\"300\"\r\n                    height=\"200\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <div className=\"project-item\">\r\n            <div className=\"heading-wrapper right-heading\">\r\n              <h3 className=\"project-name hi-message\">More Projects</h3>\r\n            </div>\r\n            <div className=\"project-inner-flex\">\r\n              {proj.projectsMini.map((miniproj) => (\r\n                <div\r\n                  className=\"project-desc panel-class\"\r\n                  key={Math.floor(Math.random() * 100000000)}\r\n                >\r\n                  <div className=\"panels\">\r\n                    <div className=\"front div\">\r\n                      <span>{miniproj.name}</span>\r\n                      <p>{miniproj.desc}</p>\r\n                    </div>\r\n                    <div className=\"back div\">\r\n                      {miniproj.liveLink ? (\r\n                        <div className=\"live-version cards\">\r\n                          <img\r\n                            src={foreign}\r\n                            alt={`${miniproj.name} : on the web`}\r\n                            width=\"15\"\r\n                          />\r\n                          <a href={miniproj.liveLink}>\r\n                            <span className=\"live-text ll\">\r\n                              Live version here\r\n                            </span>\r\n                          </a>\r\n                        </div>\r\n                      ) : null}\r\n                      <div className=\"live-version cards\">\r\n                        <img\r\n                          src={gitIcon}\r\n                          alt={`${miniproj.name}: on Github`}\r\n                          width=\"15\"\r\n                        />\r\n                        <a href={miniproj.github}>\r\n                          <span className=\"live-text ll\">Also on Github</span>\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Projects;\r\n","import React from 'react';\r\nimport './Component Styles/ProjectModal.css';\r\n\r\nconst ProjectModal = () => {\r\n    return (\r\n        <div className=\"vidmodal\" id=\"vidmodal\">\r\n           <video src=\"\" id=\"mainplayer\" autoPlay></video>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectModal\r\n","import React from \"react\";\r\nimport \"./Component Styles/ContactFooter.css\";\r\n\r\nconst ContactFooter = () => {\r\n  return (\r\n    <div className=\"contact-footer-container\" id=\"contact\">\r\n      <h3 className=\"hi-message contact-msg\">Contact</h3>\r\n      <p className=\"contact-message\">\r\n        I am currently looking for job offers for web dev positions (React,\r\n        Next.JS, Redux, Javascript et al).\r\n        <br />\r\n        Mail at :\r\n        <span className=\"mail-contact\">\r\n          <a href=\"mailto:mohitsrivastava67@gmail.com\">\r\n            mohitsrivastava67@gmail.com\r\n          </a>\r\n        </span>\r\n      </p>\r\n      <a href=\"mailto:mohitsrivastava67@gmail.com\">\r\n        <button className=\"btn-two\">Send an E-Mail</button>\r\n      </a>\r\n      <span className=\"designed\">Created By Mohit</span>\r\n      <p className=\"with\">With React & Plain CSS</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactFooter;\r\n","import React, { Component } from \"react\";\r\nimport LoadingSvg from \"./LoadingSvg\";\r\nimport Navbar from \"./Navbar\";\r\nimport Hero from \"./Hero\";\r\nimport About from \"./About\";\r\nimport Projects from \"./Projects\";\r\nimport ProjectModal from \"./ProjectModal\";\r\nimport ContactFooter from \"./ContactFooter\";\r\nimport hmb from \"../assets/svg/hamburger.svg\";\r\nimport \"./Component Styles/Main.css\";\r\n\r\nclass Main extends Component {\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      document.getElementById(\"icon\").classList.add(\"svg-container-top\");\r\n    }, 2700);\r\n    setTimeout(() => {\r\n      document.getElementById(\"svg-main-container\").style.display = \"none\";\r\n      document.getElementById(\"main-body\").style.display = \"block\";\r\n    }, 4100);\r\n    setTimeout(() => {\r\n      document\r\n        .getElementById(\"navbar-wrapper\")\r\n        .classList.add(\"navbar-wrapper-animate\");\r\n      document\r\n        .getElementById(\"hero-main-grid\")\r\n        .classList.add(\"hero-main-grid-animation\");\r\n      window.addEventListener(\"scroll\", this.testScroll);\r\n    }, 4120);\r\n  }\r\n  testScroll = (e) => {\r\n    // if(window.innerWidth >=1400 && window.scrollY > 65){\r\n    //     document.getElementById('about-wrapper').classList.add('about-wrapper-animation');\r\n    //     if(window.scrollY > 1121){\r\n    //         document.getElementById('projects-wrapper').classList.add('projects-wrapper-animation');\r\n    //     }\r\n    // }\r\n    // else if(window.innerWidth <= 528 && window.scrollY > 2){\r\n    //     document.getElementById('about-wrapper').classList.add('about-wrapper-animation');\r\n    //     if(window.scrollY > 200){\r\n    //         document.getElementById('projects-wrapper').classList.add('projects-wrapper-animation');\r\n    //     }\r\n    // }\r\n    // else if(window.innerWidth > 528 && window.innerWidth < 1400 && window.scrollY > 50){\r\n    //     document.getElementById('about-wrapper').classList.add('about-wrapper-animation');\r\n    //     if(window.scrollY > 300){\r\n    //         document.getElementById('projects-wrapper').classList.add('projects-wrapper-animation');\r\n    //     }\r\n    // }\r\n  };\r\n  showNavbar = () => {\r\n    document.getElementById(\"navbar-wrapper\").classList.add(\"navbar-block\");\r\n    document.getElementById(\"navbar-wrapper\").focus();\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"parent-wrapper\">\r\n        <div className=\"svg-main-container\" id=\"svg-main-container\">\r\n          <LoadingSvg />\r\n        </div>\r\n        <div className=\"main-body\" id=\"main-body\">\r\n          <Navbar />\r\n          {window.innerWidth <= 528 ? (\r\n            <div className=\"hamburger-wrapper\">\r\n              <img\r\n                src={hmb}\r\n                width=\"35\"\r\n                alt=\"hamburger\"\r\n                onClick={this.showNavbar}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          <Hero />\r\n          <About />\r\n          <Projects />\r\n          <div className=\"overlay\" id=\"overlay\" onClick={this.closeOverlay}>\r\n            <ProjectModal />\r\n          </div>\r\n          <ContactFooter />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  closeOverlay = () => {\r\n    document.getElementById(\"overlay\").classList.remove(\"overlay-display\");\r\n  };\r\n}\r\n\r\nexport default Main;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport \"./Components/Component Styles/Ipad.css\";\r\nimport \"./Components/Component Styles/Mobile.css\";\r\nimport Main from \"./Components/Main\";\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    const uri = window.location.href;\r\n    if (uri.split(\"#\")[1] === \"resume\") {\r\n      window.location.href =\r\n        \"https://firebasestorage.googleapis.com/v0/b/fir-auth-4f7e7.appspot.com/o/mohit_2021.pdf?alt=media&token=62c7257c-5d58-4bfd-b428-c68589bdb308\";\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\n// import ReactDOM from 'react-dom';\r\nimport { render } from \"react-snapshot\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nrender(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}